// -----------------------------------------------------------------
//	CONTRACT:  KSRTLA-Salvage1 - United Knations Coast Guard - United Knations Coast Guard- Rescue/Recover Ship at sea
//	Author: Caerfinon 
//	Credits
//	{
//	 Content = TranceaddicT's original mission: "CoastGuard-RescueFishermen" from fork of "Contract Pack: Giving Aircraft a Purpose (GAP)" - https://github.com/7ranceaddic7/GAP License: MIT
//		- original craft files for wrecks, code, and orignal mission outline.
//	{
// -----------------------------------------------------------------

CONTRACT_TYPE
{
//CONTRACT DESCRIPTION
	sortKey = KSRTLA-CG-01
	name = KSRTLA-CG-ShipRescue
	title = Rescue Ship at Sea
	group = United Knations Coast Guard
	agent = United Knations Coast Guard

	description = The Coast Guard reports that the ship @/wreck has run into trouble at sea in @/crashBiome.FullName()! The crew last reported @/crashReason and they had to abandon ship. Send a rescue and recovery mission to the last known location and rescue the crew.
	genericDescription =  A ship is in trouble in the ocean. Rescure the crew from the wreck.
	synopsis = The United Knations Coast Guard needs our help with a rescue mission involving a disabled ship at sea.  
	notes = This mission requires that you rescue Kerbals from a disabled shipwreck and return the survivors to a seaport recovery loaction.   
	completedMessage =  The United Knations Coast Guard thanks you for your help in the recue operation in @/crashBiome.FullName(). 

//Contract Limits
	maxCompletions = 0 
	maxSimultaneous = 1
	autoAccept = false
	declinable = true
	cancellable = true
	minExpiry = 1.0
	maxExpiry = 1.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Trivial
	targetBody = Kerbin
	
//Contract Rewards
	advanceFunds = (@/rewardFunds * 0.25 )
	rewardFunds = 25000 * Random(1.0, 1.15)
	rewardReputation = 10.0
	rewardScience = 0.0

//Contract Penalties
	failureFunds = @/rewardFunds * Random(1.0, 1.15)
	failureReputation = 30.0
	

// REQUIREMENTS FOR CONTRACT TO APPEAR

// requires MK3 passenger

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = KSRTLA-DiveTest
		minCount = 1
	}

// wait 30 days before offering another	
	REQUIREMENT
	{
		title = Cool down timer 14 days
		name = CompleteContract
		type = CompleteContract
		minCount = 0
		contractType =  KSRTLA-CG-ShipRescue
		cooldownDuration = 14d
	}

//DATA NODES TO PROCESS FOR CONTRACT USE

	DATA
	{
		type = String
		craft = "KSRTLA-CG=RescueShip"
		hidden = true
	}

//Random Distress Ship Name (Based on Kerbal name generator, cool idea huh?) - TranceaddicT 
	DATA
	{
		type = string
	
		wreck = "S.S. " + RandomKerbalName(Random()).FirstWord()
		
		hidden = true
	
	}
	
//Distress Ship Craft List -TranceaddicT
	DATA
	{
		type = List<string>
		
		wreckList = [ "Attack Boat disabled.craft" , "Bayou Fishing Boat disabled.craft" , "Castaway Raft disabled.craft" , "ContractPacks/GAP/Assets/Sea/Speedboat disabled.craft" , "ContractPacks/GAP/Assets/Sea/Water Boatman disabled.craft" ]
	}
	
//Select a Random Distress Ship Craft to Use -TranceaddicT
	DATA
	{
		type = string
		
		wreckCraft = @/wreckList.Random()
		
		hidden = true
	
	}
	
//SpawnVessel Roll List Values for Capsize Determination -TranceaddicT
	DATA
	{
		type = List<int>
		
		capsizeValueList = [ 0 , 180 ]
		
	}
	
//Random Capsize Decision -TranceaddicT
	DATA
	{
		type = int
		
		capsizeValue = @capsizeValueList.Random()
	}

	DATA
	{
		type = Waypoint
		hidden = true
		crashWaypoint = @/CrashWaypointGenerator.Waypoints().ElementAt(0)
	}

	DATA
	{
		type = Location
		hidden = true
		crashLocation = @/crashWaypoint.Location()
	}
	
	DATA
	{
		type = Biome
		hidden = true
		crashBiome = @/crashLocation.Biome()
	}
	
	DATA
	{
		type = List<string>
		hidden = true
		crashReasons = [ "their engine has taken on water" , "they had an engine fire" , "their rudder is disabled", "their ship was hit by a rogue wave in the recent storm", "that they were attacked by what they thought was a sea kracken" ]

	}

	DATA
	{
		type = List<int>
		hidden = true
		harbourList = [ 0 , 6 ]
	}
	
	DATA
	{
		type = int
		hidedn=true
		harbourSelected = @/harbourList.Random()
	}
	
	DATA
	{
		type = String
		hidden = true
		crashReason = @/crashReasons.Random()
	}
	
//Passenger Data

	DATA
	{
		type = List<Kerbal>
		kerbalsInDistress = NewKerbals(2)
		hidden = true
	}	


//BEHAVIOURS TO DO WHEN CREATING CONTRACT
// Waypoint to determine Crash zone
	BEHAVIOUR
	{
        name = CrashWaypointGenerator
        type = WaypointGenerator

		// Harbour that the mission will be based around
		WAYPOINT
		{
			name = @KSRTLA:HarbourFullName.ElementAt(@/harbourSelecteed)
			targetBody = @/targetBody
			icon = ContractPacks/KerbinSideRemasteredTLA/Assets/Icons/port
			altitude = 0
			latitude = @KSRTLA:HarbourLAT.ElementAt(@/harbourSelecteed)
			longitude = @KSRTLA:HarbourLON.ElementAt(@/harbourSelecteed)
		}
	    RANDOM_WAYPOINT_NEAR
		{
		
			name = Search Area
			icon = ContractPacks/KerbinSideRemasteredTLA/Assets/Icons/salvage
			targetBody = Kerbin
			nearIndex = 0
			maxDistance = 75000.0
			minDistance = 20000.0 
			underwater = true
			altitude = -0.1		
		}		
	}
//Set the missing plane at the Waypoint
	BEHAVIOUR
	{
		name = SpawnVessel
		type = SpawnVessel

		VESSEL
		{
			// Place wreck vessel on the at depth of 15 meter. -TranceaddicT
			name = @/wreck
			craftURL = "ContractPacks/KerbinSideRemasteredTLA/Assets/Ships/" + @/wreckCraft
			vesselType = Ship
			owned = false
			targetBody = Kerbin		
			lat = @/crashLocation.Latitude()
			lon = @/crashLocation.Longitude()
			alt = -15
			heading = 133.5
			pitch = 90
			roll = @/capsizeValue	
		}
	}
	// put some kerbals in the drink -TranceaddicT
	BEHAVIOUR
	{
		name = SpawnKerbal
		type = SpawnKerbal

		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(0)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			lat = @/crashLocation.Latitude() - 0.00004
			lon = @/crashLocation.Longitude() - 0.00003
			alt = 0
			heading = 350
			
		}

		KERBAL
		{
			kerbal = @/kerbalsInDistress.ElementAt(1)
			kerbalType = Unowned
			owned = false
			addToRoster = false
			
			lat = @/crashLocation.Latitude() + 0.00004
			lon = @/crashLocation.Longitude() + 0.00003
			alt = 0
			heading = 270
			
		}
		
	}


//Remove the missing plane when the contract completes
	BEHAVIOUR
	{
		name = DestroyVessel
		type = DestroyVessel
		onState = CONTRACT_COMPLETED
		vessel = @/wreck
	}

//Remove the survivors when the contract completes
	BEHAVIOUR
	{
		name = RemoveKerbal
		type = RemoveKerbal
		kerbal = @/kerbalsInDistress
	}

// Mission Dialog boxes
	BEHAVIOUR
	{
		name = DialogBox
		type = DialogBox

		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = RecoveryReady
			position = CENTER
			
			TEXT
			{
				text = This is outstanding work! You've brought the survivors safely to the surface. I knew you could do it. Now bring them home to port... and if you happen to have any salvage, bring that too.  
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredTLA/Assets/Characters/SZ1
				characterName = Steve Zissou Kerman
			}
			
		}
		
		DIALOG_BOX
		{
			condition = PARAMETER_COMPLETED
			parameter = ReturnToPort
			
			position = CENTER
			
			TEXT
			{
				text = Trans Flight, we have you on approach. You are cleared for landing. On touchdown proceed to the indicated airport terminal. Directions have been transmited to you.
				fontSize = 20
				textColor = #BADA55
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredTLA/Assets/Characters/SZ2
				characterName = Steve Zissou Kerman
			}
			
		}
		
		
// failed misssion dialog
		DIALOG_BOX
		{
			condition = CONTRACT_FAILED
			position = CENTER
			title = <b>Sometimes Things Go Wrong</b>
			titleColor = #B00B1E
			
			TEXT
			{
				text = Trans Flight, Are you there? please respond. Trans Flight, we've lost you on radar, do you copy? Are you declaring an emergency?.... and you were doing so well.
				fontSize = 20
				textColor = #B00B1E
			}
			
			IMAGE
			{
				url = ContractPacks/KerbinSideRemasteredTLA/Assets/Characters/SZ3
				characterName = Steve Zissou Kerman
			}
		}
	}

// -----------------------------------------------------------------	
// RecoveryReady
// -----------------------------------------------------------------
	PARAMETER
	{
		name = RecoveryReady
		type = VesselParameterGroup
		define = @/craft
		title = Rescue the crew of the @/wreck
		completeInSequence = true
		disableOnStateChange = true
		hideVesselName = true
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = all survivors are on board
			hideChildren = true
			completeInSequence = true
			kerbal = @/kerbalsInDistress
		}
		PARAMETER
		{
			name = ReachState
			type = ReachState
			title = vessel is all stop
			situation = SPLASHED
			maxSpeed = 5
			minAltitude = -5
			disableOnStateChange = false
			hideChildren = true
			completeInSequence = true
		}
	}
// -----------------------------------------------------------------	
// Return to port
// -----------------------------------------------------------------
	PARAMETER
	{
		name = ReturnToPort
		type = VesselParameterGroup
		vessel = @/craft
		title = Return the crew to port
		completeInSequence = true
		disableOnStateChange = false
		hideVesselName = true	

		PARAMETER
		{
			name = All
			type = All
			title = return to @KSRTLA:HarbourFullName.ElementAt(@/harbourSelecteed)
			notes = Complete by navigating to a seaport within 500 meteres of the marker
			completeInSequence = true
			disableOnStateChange = true

			PARAMETER
			{
				name = VisitWaypoint
				type = VisitWaypoint
				index = 0
				distance = 500.0
				showMessages = true
				disableOnStateChange = false
				completeInSequence = true
				hideChildren = true
			}
			PARAMETER
			{
				name = ReachState
				type = ReachState
				title = and stop your vessel on the surface
				situation = SPLASHED
				maxSpeed = 5
				minAltitude = -5
				disableOnStateChange = false
				hideChildren = true
				completeInSequence = true
			}
		}
	}

// -----------------------------------------------------------------
// Safety first
// -----------------------------------------------------------------
	PARAMETER
	{
		name = KerbalDeaths
		type = KerbalDeaths
		title = Without killing anyone 
		vessel = @/craft
		hideChildren = true
		completeInSequence = true
	}
// -----------------------------------------------------------------
//Recovery Parameter - Recover Kerbals
// -----------------------------------------------------------------
	PARAMETER
	{
		name = RecoverKerbal
		type = RecoverKerbal
		title = and recover all survivors
		hideChildren = true
		completeInSequence = true
	}
}