// -----------------------------------------------------------------
//	CONTRACT:  KSRTLA-Salvage3 - Deepsea Salvage - Deepsea Salvage - Rescue/Recover Large Wreck
//	Author: Caerfinon 
// -----------------------------------------------------------------

CONTRACT_TYPE
{
//CONTRACT DESCRIPTION
	sortKey = KSRTLA-SLVG-01
	name = KSRTLA-Salvage3
	title = Large Aircraft Recovery
	group = Deepsea Salvage
	agent = Deepsea Salvage

	description = a description 
	genericDescription =  A generic description
	synopsis = Synopsis  
	notes = This mission can be completed using EVA Construction or a mod that allows you to manipulate parts during EVA such as KIS.  
	completedMessage = You have don the thing

//Contract Limits
	maxCompletions = 0
	maxSimultaneous = 1
	autoAccept = false
	declinable = true
	cancellable = true
	minExpiry = 1.0
	maxExpiry = 1.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Exceptional
	targetBody = Kerbin
	
//Contract Rewards
	advanceFunds = (@/rewardFunds * 0.25 )
	rewardFunds = 10000 * Random(1.0, 1.15)
	rewardReputation = 10.0
	rewardScience = 0.0

//Contract Penalties
	failureFunds = @/rewardFunds * Random(1.0, 1.15)
	failureReputation = 30.0
	

// REQUIREMENTS FOR CONTRACT TO APPEAR

// wait 30 days before offering another	
	REQUIREMENT
	{
		title = Cool down timer 30 days
		name = CompleteContract
		type = CompleteContract
		minCount = 0
		contractType =  KSRTLA-Salvage3
		cooldownDuration = 30d
	}

//DATA NODES TO PROCESS FOR CONTRACT USE

	DATA
	{
		type = String
		craft = MissingAircraft
		hidden = true
		
	}
	
	DATA
	{
		type = Waypoint
		hidden = true
		crashWaypoint = @/CrashWaypointGenerator.Waypoints().ElementAt(0)
	}

	DATA
	{
		type = Location
		hidden = true
		crashLocation = @/crashWaypoint.Location()
	}
	
	DATA
	{
		type = Biome
		hidden = true
		crashBiome = @/crashLocation.Biome()
	}
	
	DATA
	{
		type = List<string>
		hidden = true
		crashReasons = ["instrument failure","engine fire","structural damage","bird strikes","loss of power","depressurization"]
	}
	
	DATA
	{
		type = String
		hidden = true
		crashReason = @/crashReasons.Random()
	}
	
//Passenger Data

	DATA
	{
		type = List<Kerbal>
		kerbalsInDistress = NewKerbals(8)
		hidden = true
	}	


//BEHAVIOURS TO DO WHEN CREATING CONTRACT
// Waypoint to determine Crash zone
	BEHAVIOUR
	{
        name = CrashWaypointGenerator
        type = WaypointGenerator
		
		RANDOM_WAYPOINT
		{
			name = Crash Site
			targetBody = @/targetBody
			icon = ContractPacks/KerbinSideRemasteredTLA/Assets/Icons/salvage
			underwater = true 
			altitude = -0.1
		}
		// needs waypoints for return harbours
    }
	
//Set the missing plane at the Waypoint
	BEHAVIOUR
	{
		name = SpawnVessel
		type = SpawnVessel

		VESSEL
		{
			// Place wreck vessel on the at depth of 1 meter. It will sink within physics range 
			// If placed below the terrain level of the ocean floor it will fall through and explode
			name = @/craft
			craftURL = ContractPacks/KerbinSideRemasteredTLA/Assets/Ships/LargeWreck.craft
			flagURL = ContractPacks/KerbinSideRemasteredTLA/Assets/Flags/KSCAirlines
			vesselType = Unknown
			owned = false
			lat = @/crashLocation.Latitude()
			lon = @/crashLocation.Longitude()
			alt = -1
			
	        CREW
			{
				addToRoster = false
				name = @/kerbalsInDistress.ElementAt(0)
			}
	        CREW
			{
				addToRoster = false
				name = @/kerbalsInDistress.ElementAt(1)
			}
	        CREW
			{
				addToRoster = false
				name = @/kerbalsInDistress.ElementAt(2)
			}
	        CREW
			{
				addToRoster = false
				name = @/kerbalsInDistress.ElementAt(3)
			}
	        CREW
			{
				addToRoster = false
				name = @/kerbalsInDistress.ElementAt(4)
			}
	        CREW
			{
				addToRoster = false
				name = @/kerbalsInDistress.ElementAt(5)
			}
	        CREW
			{
				addToRoster = false
				name = @/kerbalsInDistress.ElementAt(6)
			}
	        CREW
			{
				addToRoster = false
				name = @/kerbalsInDistress.ElementAt(7)
			}
		}
	}

    BEHAVIOUR
    {
        type = ChangeKerbalType

        onState = CONTRACT_ACCEPTED

        KERBAL_INFO
        {
            kerbal = @/kerbalsInDistress.ElementAt(0)
            trait = Tourist
            kerbalType = Tourist
        }
        KERBAL_INFO
        {
            kerbal = @/kerbalsInDistress.ElementAt(1)
            trait = Tourist
            kerbalType = Tourist
        }
        KERBAL_INFO
        {
            kerbal = @/kerbalsInDistress.ElementAt(2)
            trait = Tourist
            kerbalType = Tourist
        }
        KERBAL_INFO
        {
            kerbal = @/kerbalsInDistress.ElementAt(3)
            trait = Tourist
            kerbalType = Tourist
        }
        KERBAL_INFO
        {
            kerbal = @/kerbalsInDistress.ElementAt(4)
            trait = Tourist
            kerbalType = Tourist
        }
        KERBAL_INFO
        {
            kerbal = @/kerbalsInDistress.ElementAt(5)
            trait = Tourist
            kerbalType = Tourist
        }
        KERBAL_INFO
        {
            kerbal = @/kerbalsInDistress.ElementAt(6)
            trait = Tourist
            kerbalType = Tourist
		}
        KERBAL_INFO
        {
            kerbal = @/kerbalsInDistress.ElementAt(7)
            trait = Tourist
            kerbalType = Tourist
        }
    }


//Remove the missing plane when the contract completes
	BEHAVIOUR
	{
		name = DestroyVessel
		type = DestroyVessel
		onState = CONTRACT_COMPLETED
		vessel = @/craft
	}


//PARAMETERS FOR CONTRACT COMPLETION
//Navigate to crash site

// -----------------------------------------------------------------	
// Return recovery harbour
// -----------------------------------------------------------------
	
	
PARAMETER
{
    name = KerbalDeaths
    type = KerbalDeaths
	title = Without killing the crash survivors 
    kerbal = @/kerbalsInDistress
	hideChildren = true
	completeInSequence = true
}
	
//Recovery Parameter - Recover Kerbals
		PARAMETER
		{
			name = RecoverKerbal
			type = RecoverKerbal
			title = @kerbal.First()
			hideChildren = true
			completeInSequence = true
	
			ITERATOR
			{
				type = Kerbal
				kerbal = @/kerbalsInDistress
				
			}
		}
	}
	
}